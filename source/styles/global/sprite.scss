// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$menuseparator-name: 'menuseparator';
$menuseparator-x: 353px;
$menuseparator-y: 85px;
$menuseparator-offset-x: -353px;
$menuseparator-offset-y: -85px;
$menuseparator-width: 1px;
$menuseparator-height: 29px;
$menuseparator-total-width: 1503px;
$menuseparator-total-height: 343px;
$menuseparator-image: '../images/sprite.png';
$menuseparator: (353px, 85px, -353px, -85px, 1px, 29px, 1503px, 343px, '../images/sprite.png', 'menuseparator', );
$sheet-b-ch-name: 'sheet_b_ch';
$sheet-b-ch-x: 353px;
$sheet-b-ch-y: 0px;
$sheet-b-ch-offset-x: -353px;
$sheet-b-ch-offset-y: 0px;
$sheet-b-ch-width: 1150px;
$sheet-b-ch-height: 31px;
$sheet-b-ch-total-width: 1503px;
$sheet-b-ch-total-height: 343px;
$sheet-b-ch-image: '../images/sprite.png';
$sheet-b-ch: (353px, 0px, -353px, 0px, 1150px, 31px, 1503px, 343px, '../images/sprite.png', 'sheet_b_ch', );
$sheet-ch1-name: 'sheet_ch1';
$sheet-ch1-x: 353px;
$sheet-ch1-y: 62px;
$sheet-ch1-offset-x: -353px;
$sheet-ch1-offset-y: -62px;
$sheet-ch1-width: 1150px;
$sheet-ch1-height: 8px;
$sheet-ch1-total-width: 1503px;
$sheet-ch1-total-height: 343px;
$sheet-ch1-image: '../images/sprite.png';
$sheet-ch1: (353px, 62px, -353px, -62px, 1150px, 8px, 1503px, 343px, '../images/sprite.png', 'sheet_ch1', );
$sheet-t-ch-name: 'sheet_t_ch';
$sheet-t-ch-x: 353px;
$sheet-t-ch-y: 31px;
$sheet-t-ch-offset-x: -353px;
$sheet-t-ch-offset-y: -31px;
$sheet-t-ch-width: 1150px;
$sheet-t-ch-height: 31px;
$sheet-t-ch-total-width: 1503px;
$sheet-t-ch-total-height: 343px;
$sheet-t-ch-image: '../images/sprite.png';
$sheet-t-ch: (353px, 31px, -353px, -31px, 1150px, 31px, 1503px, 343px, '../images/sprite.png', 'sheet_t_ch', );
$sidebar-bg-name: 'sidebar_bg';
$sidebar-bg-x: 353px;
$sidebar-bg-y: 70px;
$sidebar-bg-offset-x: -353px;
$sidebar-bg-offset-y: -70px;
$sidebar-bg-width: 15px;
$sidebar-bg-height: 15px;
$sidebar-bg-total-width: 1503px;
$sidebar-bg-total-height: 343px;
$sidebar-bg-image: '../images/sprite.png';
$sidebar-bg: (353px, 70px, -353px, -70px, 15px, 15px, 1503px, 343px, '../images/sprite.png', 'sidebar_bg', );
$sidebar-g-name: 'sidebar_g';
$sidebar-g-x: 0px;
$sidebar-g-y: 0px;
$sidebar-g-offset-x: 0px;
$sidebar-g-offset-y: 0px;
$sidebar-g-width: 353px;
$sidebar-g-height: 343px;
$sidebar-g-total-width: 1503px;
$sidebar-g-total-height: 343px;
$sidebar-g-image: '../images/sprite.png';
$sidebar-g: (0px, 0px, 0px, 0px, 353px, 343px, 1503px, 343px, '../images/sprite.png', 'sidebar_g', );
$spritesheet-width: 1503px;
$spritesheet-height: 343px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($menuseparator, $sheet-b-ch, $sheet-ch1, $sheet-t-ch, $sidebar-bg, $sidebar-g, );
$spritesheet: (1503px, 343px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
